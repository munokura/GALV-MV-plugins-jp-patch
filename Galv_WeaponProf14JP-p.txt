/*:ja
 * @plugindesc (v.1.4) 武器習熟レベルのシステムを追加します。
 *
 * @author Galv - galvs-scripts.com
 *
 * @param Hit Bonus Per Point
 * @text 命中率の増加率
 * @desc 武器習熟レベル毎の命中率の増加率
 * @default 1
 *
 * @param Crit Bonus Per Point
 * @text 会心率の増加率
 * @desc 武器習熟レベル毎の会心率の増加率
 * @default 0.1
 *
 * @param Default Max Value
 * @text レベル最大値
 * @desc 武器習熟レベルの最大値
 * @default 100
 *
 * @param XP Per Hit
 * @text 命中時XP
 * @desc 攻撃で命中した時に得られるXPの量
 * @default 1
 *
 * @param XP Per Miss
 * @text ミス時XP
 * @desc 攻撃でミスになった時に得られるXPの量
 * @default 1
 *
 * @param XP Required For Level
 * @text レベルに必要なXP
 * @desc 各レベルで武器の習熟レベルを上げるために必要なXPの基本量
 * @default 10
 *
 * @param Additional XP Per Level
 * @text レベル毎の追加XP
 * @desc 必要なXPの追加量に現在の武器習熟レベルを掛けたもの
 * @default 1
 *
 * @param Weapon Type Icons
 * @text 武器の種類アイコン
 * @desc データベース内の武器の種類アイコンIDのリスト。最初の数値は武器なし
 * @default 77,96,97,98,99,100,101,102,103,104,105,106,107
 *
 * @param Prof Up Animation
 * @text 習熟アニメーション
 * @desc 戦闘中に武器の習熟レベルが上がると、SVアクターで再生されるアニメーションID
 * @default 2
 *
 * @param Unarmed Name
 * @text 武器を非装備テキスト
 * @desc 武器を装備していない状態の表示テキスト
 * @default 素手
 *
 * @param Skill Category
 * @text スキルカテゴリー表示
 * @desc メニューの武器習熟スキルカテゴリの表示テキスト
 * @default 習熟レベル
 *
 * @param Default Skill Menu
 * @text スキルメニュー表示
 * @desc スキルメニューへの表示
 * @type boolean
 * @on 表示
 * @off 非表示
 * @default true
 *
 * @param Yanfly Status Menu
 * @text YEP_StatusMenuCoreにカテゴリ追加
 * @desc YEP_StatusMenuCoreにカテゴリ追加
 * @type boolean
 * @on 追加
 * @off 無効
 * @default false
 *
 * @help
 * 翻訳:ムノクラ
 * https://fungamemake.com/
 * https://twitter.com/munokura/
 *
 * ---------------------------------------------------------------------------
 *   Galv's Weapon Proficiency
 * ---------------------------------------------------------------------------
 * アクターは、プロジェクトの武器の種類毎に新しい値を持ちます。
 * これらの値は、各武器の習熟レベルを表し、
 * 命中率とクリティカル率にボーナスを与えることができます。
 * (注:クリティカル率ボーナスは、クリティカルできるスキルにのみ適用されます)。
 * また、スキルのダメージ式にコードを追加して、
 * 装備している武器のアクターの武器能力を式で使用することもできます。
 *
 * アクターはゲーム中に武器の習熟レベルを上げることができます。
 * 職業に武器の習熟レベルもありますが、方程式の中で変化することはなく、
 * アクターの習熟レベルに追加されます。
 *
 * 敵は各々がスキル式で使用できる、1つの武器習熟値を持てます。
 *
 *
 * 武器の習熟レベルを上げる
 * --------------------------
 * 習熟レベルは、アクターが戦闘で武器を使用することによって上昇します。
 * 全ての命中/ミスは、使用している武器の種類に武器のXP(習熟経験値)を獲得でき、
 * 必要な武器のXPに達すると、習熟レベルが獲得し、
 * アニメーションがアクターで再生されます。
 * 命中とミス毎に得られるXPの量とレベル毎に必要な量は、
 * プラグイン設定で変更できます。
 *
 * 注:スキルタイプを'物理攻撃'に設定して、XPを獲得するか、
 * クリティカル/命中率に影響を与える必要があります。
 *
 *
 * メニューに習熟レベルを表示する
 * --------------------------
 * アクターの武器の習熟レベルを示す2つのプラグイン設定があります。
 * そのうちの1つはデフォルトのスキルメニューに新しいカテゴリを追加し、
 * もう1つはYEP_StatusMenuCoreに新しいカテゴリを追加します。
 * プラグイン管理でこのプラグインをYEP_StatusMenuCoreの下側に置いてください。
 *
 * その他のメニューを追加するには、JavaScriptの知識が必要です。
 * アクターが装備できる特性を持つ武器タイプのみがメニューに表示されます。
 *
 * ---------------------------------------------------------------------------
 *   アクター、職業のメモタグ
 * ---------------------------------------------------------------------------
 *
 *  <prof:id|x|x2,id|x|x2>
 *      // id = 武器タイプid(データベースから)
 *      //      0は習熟レベルの対象外
 *      // x  = アクター/職業が武器の種類に対して持つ武器の習熟レベルの値。
 *      //      タグが存在しない場合や、
 *      //      このリストに武器の種類が追加されていない場合、
 *      //      武器の習熟レベルは0になります。
 *      // x2 = アクター/職業に対する武器の習熟レベルの最大値。
 *      //      アクターの上限は職業の上限よりも優先されます。
 *      //      |x2を省いた場合、
 *      //      プラグイン設定で指定されたデフォルトの最大値を使用します。
 *
 * 例
 * <prof:1|20>            // 武器タイプ1(デフォルトは短剣)を20に設定
 * <prof:1|20,2|30>       // 上記と同じですが、武器タイプ2を30に設定
 * <prof:1|20,2|30,0|10>  // 上記と同じですが、
 *                           他の値と同様に全ての武器タイプに10を設定
 * <prof:1|0|100>         // 武器タイプ1を0に設定し、最大を100に設定
 * ---------------------------------------------------------------------------
 *
 * ---------------------------------------------------------------------------
 *   敵キャラのメモタグ
 * ---------------------------------------------------------------------------
 *  <prof:x>     // 敵は装備することができないため、
 *               // この1つの値のみを使用します。
 *               // タグが存在しない場合、0になります。
 * ---------------------------------------------------------------------------
 *   ダメージの式
 * ---------------------------------------------------------------------------
 * ダメージ式では、装備されている武器習熟レベルを使用できます。
 * a(攻撃者)/b(対象)を参照し、wProf()を使用して実行できます。
 * 例えば:
 * a.wProf()
 *
 * ---------------------------------------------------------------------------
 *   スクリプトコール
 * ---------------------------------------------------------------------------
 *
 *   $gameActors.actor(x).gainWProfXp(amount,wTypeId);
 *               // アクターxのwTypeIdにXPの量を追加します。
 *               // アクターが装備している武器の種類にXPを追加する場合、
 *               // wTypeIdを空白のままにします。
 *
 *
 * ---------------------------------------------------------------------------
 *   変数の操作のスクリプト
 * ---------------------------------------------------------------------------
 *
 *     Galv.WPROF.value(aId,wId);
 *               // アクターの武器習熟レベルを返します。
 *               // aId=アクターID、
 *               // wId=武器タイプID、
 *               // 装備している武器IDを取得する場合、wIdを省略します。
 *               // 変数の操作のスクリプトで使用します。
 *
 * ---------------------------------------------------------------------------
 */
